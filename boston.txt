import numpy as np
import pandas as pd
df=pd.read_csv("BostonHousing.csv")

df.head()


df.isnull().sum()

# col_names=df.columns[df.isnull().any()].tolist()
# col_names
# for name in col_names:
#     cmean=df[name].mean()
#     df[name].fillna(cmean,inplace=True)
# df.isnull().any()

x=df.iloc[:,:-1]
y=df.iloc[:,-1]

print(x)
print(y)

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

scaler=StandardScaler()
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
x_train=scaler.fit_transform(x_train)
x_test=scaler.transform(x_test)

from keras.layers import Dense
from keras.models import Sequential

model=Sequential([
    Dense(64,activation='relu'),
    Dense(32,activation='relu'),
    Dense(1)
])

model.compile(optimizer="adam",loss="mean_squared_error",metrics=["mae"])
model.fit(x_train,y_train,epochs=100,batch_size=31,verbose=1)



loss=model.evaluate(x_test,y_test)
print(loss)

pred=model.predict(x_test)


from sklearn.metrics import mean_squared_error,r2_score
mse=mean_squared_error(y_test,pred)
print("mse is : ",mse)
rmse=np.sqrt(mse)
print("rmse is : ",rmse)
r2=r2_score(y_test,pred)
print("r2_score is : ",r2)